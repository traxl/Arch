@book{Buschmann1996,
abstract = {Pattern-oriented software architecture is a new approach to software development. This book represents the progression and evolution of the pattern approach into a system of patterns capable of describing and documenting large-scale applications. A pattern system provides, on one level, a pool of proven solutions to many recurring design problems. On another it shows how to combine individual patterns into heterogeneous structures and as such it can be used to facilitate a constructive development of software systems. Uniquely, the patterns that are presented in this book span several levels of abstraction, from high-level architectural patterns and medium-level design patterns to low-level idioms. The intention of, and motivation for, this book is to support both novices and experts in software development. Novices will gain from the experience inherent in pattern descriptions and experts will hopefully make use of, add to, extend and modify patterns to tailor them to their own needs. None of the pattern descriptions are cast in stone and, just as they are borne from experience, it is expected that further use will feed in and refine individual patterns and produce an evolving system of patterns.},
author = {Buschmann, Frank and Meunier, Regine and Rohnert, Hans and Sommerlad, Peter and Stal, Michael},
booktitle = {Network},
file = {:C$\backslash$:/Users/Traxl/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Buschmann et al. - 1996 - Pattern-Oriented Software Architecture - A System of Patterns.pdf:pdf},
isbn = {0471958697},
keywords = {B-SWDesign,Busc96,DISS. toobtain,Folder - Patterns \& Tactics,Folder - enterprise content management - reference,Folder - layered architecture,LLSE,LLSE17,OOP,PAC,SWLC,SWQM,development,pattern,pattern-oriented,patterns,protopattern,software architecture,software\_architecture},
mendeley-tags = {B-SWDesign,Busc96,development,DISS. toobtain,Folder - enterprise content management - reference,Folder - layered architecture,Folder - Patterns \& Tactics,LLSE,LLSE17,OOP,PAC,pattern,pattern-oriented,patterns,protopattern,software architecture,software\_architecture,SWLC,SWQM},
pages = {476},
title = {{Pattern-Oriented Software Architecture - A System of Patterns}},
year = {1996}
}
@book{Fowler2002,
abstract = {The practice of enterprise application development has benefited from the emergence of many new enabling technologies. Multi-tiered object-oriented platforms, such as Java and .NET, have become commonplace. These new tools and technologies are capable of building powerful applications, but they are not easily implemented. Common failures in enterprise applications often occur because their developers do not understand the architectural lessons that experienced object developers have learned. "Patterns of Enterprise Application Architecture" is written in direct response to the stiff challenges that face enterprise application developers. The author, noted object-oriented designer Martin Fowler, noticed that despite changes in technology-from Smalltalk to CORBA to Java to .NET-the same basic design ideas can be adapted and applied to solve common problems. With the help of an expert group of contributors, Martin distills over forty recurring solutions into patterns. The result is an indispensable handbook of solutions that are applicable to any enterprise application platform. This book is actually two books in one. The first section is a short tutorial on developing enterprise applications, which you can read from start to finish to understand the scope of the book's lessons. The next section, the bulk of the book, is a detailed reference to the patterns themselves. Each pattern provides usage and implementation information, as well as detailed code examples in Java or C. The entire book is also richly illustrated with UML diagrams to further explain the concepts. Armed with this book, you will have the knowledge necessary to make important architectural decisions about building an enterprise application and the proven patterns for use when building them. The topics covered include: Dividing an enterprise application into layers The major approaches to organizing business logic An in-depth treatment of mapping between objects and relational databases Using Model-View-Controller to organize a Web presentation Handling concurrency for data that spans multiple transactions Designing distributed object interfaces 0321127420B10152002},
author = {Fowler, Martin},
booktitle = {Source},
doi = {10.1119/1.1969597},
isbn = {0321127420},
issn = {00029505},
keywords = {48,Accountancy-,ActiveRecord,Application software,Application software - Development,Application software/ Development,Architecture-,Associations-,Business - Data processing,Computer architecture,Computers / Hardware / Personal Computers / Genera,Computers / Programming / General,Computers / Programming / Object Oriented,Computers / Systems Architecture / General,Editors-,Electronic books,Engineering,Enterprise Application Architecture,Folder - 2009 - 2013 BYU - Mentoring Interface Res,Folder - EAM Archtetypes,Folder - enterprise content management - reference,Fowl03,Fowler-PatternsEnterpriseApplicationArchitecture:2,History,Java,Java EE,OOP,Personal,Publications-,SOA,Software Architecture,Software Architectures,Software Development,System design,Tesi,architecture,business,database engineering,design pattern,design patterns,enterprise,file-import-09-12-07,orm,patterns,profiles-,programming,software,software engineering,software-architecture,software-engineering,studies-,type:book},
mendeley-tags = {48,Accountancy-,ActiveRecord,Application software,Application software - Development,Application software/ Development,architecture,Architecture-,Associations-,business,Business - Data processing,Computer architecture,Computers / Hardware / Personal Computers / Genera,Computers / Programming / General,Computers / Programming / Object Oriented,Computers / Systems Architecture / General,database engineering,design pattern,design patterns,Editors-,Electronic books,Engineering,enterprise,Enterprise Application Architecture,file-import-09-12-07,Folder - 2009 - 2013 BYU - Mentoring Interface Res,Folder - EAM Archtetypes,Folder - enterprise content management - reference,Fowl03,Fowler-PatternsEnterpriseApplicationArchitecture:2,History,Java,Java EE,OOP,orm,patterns,Personal,profiles-,programming,Publications-,SOA,software,Software Architecture,Software Architectures,Software Development,software engineering,software-architecture,software-engineering,studies-,System design,Tesi,type:book},
pages = {560},
title = {{Patterns of Enterprise Application Architecture}},
url = {http://www.amazon.com/Patterns-Enterprise-Application-Architecture-Martin/dp/0321127420},
volume = {48},
year = {2002}
}
@incollection{Lavender1996,
abstract = {Patterns are a literary form with roots in literate programming, in$\backslash$na design movement of the same name in contemporary architecture,$\backslash$nand in the practices common to the ageless literature of any culture.$\backslash$nThis volume, with contributions from the biggest names in the patterns$\backslash$ncommunity, is the second in a series documenting patterns for professional$\backslash$nsoftware developers. These patterns capture solutions to a plethora$\backslash$nof recurring problems in software design and development, including$\backslash$nlanguage-specific patterns and idioms; general- and special-purpose$\backslash$npatterns; architectural patterns; process and organizational patterns;$\backslash$nexpositional patterns; and patterns for concurrent programming, distributed$\backslash$nsystems, and reactive systems. This new collection not only reveals$\backslash$nsecrets of great software professionals but also makes those secrets$\backslash$neasy to apply to your own work.},
author = {Lavender, R Greg and Schmidt, Douglas C},
booktitle = {Pattern Languages of Program Design 2},
isbn = {0-201-895277},
keywords = {CoSc95,Folder - Patterns,HaFR99,MaRB98,VlCK96,VlissCoplienKerth96},
mendeley-tags = {CoSc95,Folder - Patterns,HaFR99,MaRB98,VlCK96,VlissCoplienKerth96},
pages = {483--499},
title = {{Pattern Languages of Program Design 2}},
year = {1996}
}
